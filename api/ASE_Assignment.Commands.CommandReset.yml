### YamlMime:ManagedReference
items:
- uid: ASE_Assignment.Commands.CommandReset
  commentId: T:ASE_Assignment.Commands.CommandReset
  id: CommandReset
  parent: ASE_Assignment.Commands
  children:
  - ASE_Assignment.Commands.CommandReset.#ctor
  - ASE_Assignment.Commands.CommandReset.#ctor(BOOSE.Canvas)
  - ASE_Assignment.Commands.CommandReset.CheckParameters(System.String[])
  - ASE_Assignment.Commands.CommandReset.Execute
  langs:
  - csharp
  - vb
  name: CommandReset
  nameWithType: CommandReset
  fullName: ASE_Assignment.Commands.CommandReset
  type: Class
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/Commands/CommandReset.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: CommandReset
    path: ASE_Assignment/Commands/CommandReset.cs
    startLine: 21
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.Commands
  summary: >-
    Represents a command that resets the Canvas to its initial state.

    The command does not take any parameters.
  remarks: >-
    The <xref href="ASE_Assignment.Commands.CommandReset" data-throw-if-not-resolved="false"></xref> class is responsible for resetting the Canvas to its default or initial state. 

    Similar to the <xref href="ASE_Assignment.Commands.CommandClear" data-throw-if-not-resolved="false"></xref> command, it does not require any parameters and directly operates on the Canvas object.

    <ul><li>Resets the Canvas to its initial state when executed.</li><li>Does not throw any exceptions by itself, as it does not require parameter validation.</li></ul>
  example: []
  syntax:
    content: 'public class CommandReset : CommandOneParameter, ICommand'
    content.vb: Public Class CommandReset Inherits CommandOneParameter Implements ICommand
  inheritance:
  - System.Object
  - BOOSE.Command
  - BOOSE.CanvasCommand
  - BOOSE.CommandOneParameter
  implements:
  - BOOSE.ICommand
  inheritedMembers:
  - BOOSE.CommandOneParameter.param1
  - BOOSE.CommandOneParameter.param1unprocessed
  - BOOSE.CanvasCommand.yPos
  - BOOSE.CanvasCommand.xPos
  - BOOSE.CanvasCommand.canvas
  - BOOSE.CanvasCommand.Canvas
  - BOOSE.Command.program
  - BOOSE.Command.parameterList
  - BOOSE.Command.parameters
  - BOOSE.Command.paramsint
  - BOOSE.Command.Set(BOOSE.StoredProgram,System.String)
  - BOOSE.Command.Compile
  - BOOSE.Command.ProcessParameters(System.String)
  - BOOSE.Command.ToString
  - BOOSE.Command.Program
  - BOOSE.Command.Name
  - BOOSE.Command.ParameterList
  - BOOSE.Command.Parameters
  - BOOSE.Command.Paramsint
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: ASE_Assignment.Commands.CommandReset.#ctor
  commentId: M:ASE_Assignment.Commands.CommandReset.#ctor
  id: '#ctor'
  parent: ASE_Assignment.Commands.CommandReset
  langs:
  - csharp
  - vb
  name: CommandReset()
  nameWithType: CommandReset.CommandReset()
  fullName: ASE_Assignment.Commands.CommandReset.CommandReset()
  type: Constructor
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/Commands/CommandReset.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: .ctor
    path: ASE_Assignment/Commands/CommandReset.cs
    startLine: 30
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.Commands
  summary: Initializes a new instance of the <xref href="ASE_Assignment.Commands.CommandReset" data-throw-if-not-resolved="false"></xref> class with default values.
  remarks: >-
    This constructor is used when no specific Canvas reference is needed to initialize the command.

    The Canvas object will be provided when the <xref href="ASE_Assignment.Commands.CommandReset.Execute" data-throw-if-not-resolved="false"></xref> method is called.
  example: []
  syntax:
    content: public CommandReset()
    content.vb: Public Sub New()
  overload: ASE_Assignment.Commands.CommandReset.#ctor*
  nameWithType.vb: CommandReset.New()
  fullName.vb: ASE_Assignment.Commands.CommandReset.New()
  name.vb: New()
- uid: ASE_Assignment.Commands.CommandReset.#ctor(BOOSE.Canvas)
  commentId: M:ASE_Assignment.Commands.CommandReset.#ctor(BOOSE.Canvas)
  id: '#ctor(BOOSE.Canvas)'
  parent: ASE_Assignment.Commands.CommandReset
  langs:
  - csharp
  - vb
  name: CommandReset(Canvas)
  nameWithType: CommandReset.CommandReset(Canvas)
  fullName: ASE_Assignment.Commands.CommandReset.CommandReset(BOOSE.Canvas)
  type: Constructor
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/Commands/CommandReset.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: .ctor
    path: ASE_Assignment/Commands/CommandReset.cs
    startLine: 41
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.Commands
  summary: Initializes a new instance of the <xref href="ASE_Assignment.Commands.CommandReset" data-throw-if-not-resolved="false"></xref> class with a specified Canvas.
  remarks: This constructor is used when the command is initialized with a known Canvas object that the operation will affect.
  example: []
  syntax:
    content: public CommandReset(Canvas c)
    parameters:
    - id: c
      type: BOOSE.Canvas
      description: The <xref href="BOOSE.Canvas" data-throw-if-not-resolved="false"></xref> object on which the reset operation will be performed.
    content.vb: Public Sub New(c As Canvas)
  overload: ASE_Assignment.Commands.CommandReset.#ctor*
  nameWithType.vb: CommandReset.New(Canvas)
  fullName.vb: ASE_Assignment.Commands.CommandReset.New(BOOSE.Canvas)
  name.vb: New(Canvas)
- uid: ASE_Assignment.Commands.CommandReset.Execute
  commentId: M:ASE_Assignment.Commands.CommandReset.Execute
  id: Execute
  parent: ASE_Assignment.Commands.CommandReset
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: CommandReset.Execute()
  fullName: ASE_Assignment.Commands.CommandReset.Execute()
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/Commands/CommandReset.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: Execute
    path: ASE_Assignment/Commands/CommandReset.cs
    startLine: 61
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.Commands
  summary: Executes the Reset command to reset the Canvas to its initial state.
  remarks: >-
    The <xref href="ASE_Assignment.Commands.CommandReset.Execute" data-throw-if-not-resolved="false"></xref> method calls the Canvas' <xref href="BOOSE.Canvas.Reset" data-throw-if-not-resolved="false"></xref> method to reset the canvas.

    Since this command does not require parameters, no validation is necessary for execution.
  example:
  - >-
    The following example demonstrates how to use the <xref href="ASE_Assignment.Commands.CommandReset" data-throw-if-not-resolved="false"></xref> class:

    <pre><code class="lang-csharp">Canvas myCanvas = new Canvas();

    Reset resetCommand = new Reset(myCanvas);

    resetCommand.Execute(); // Resets the canvas to its initial state</code></pre>
  syntax:
    content: public override void Execute()
    content.vb: Public Overrides Sub Execute()
  overridden: BOOSE.Command.Execute
  overload: ASE_Assignment.Commands.CommandReset.Execute*
- uid: ASE_Assignment.Commands.CommandReset.CheckParameters(System.String[])
  commentId: M:ASE_Assignment.Commands.CommandReset.CheckParameters(System.String[])
  id: CheckParameters(System.String[])
  parent: ASE_Assignment.Commands.CommandReset
  langs:
  - csharp
  - vb
  name: CheckParameters(string[])
  nameWithType: CommandReset.CheckParameters(string[])
  fullName: ASE_Assignment.Commands.CommandReset.CheckParameters(string[])
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/Commands/CommandReset.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: CheckParameters
    path: ASE_Assignment/Commands/CommandReset.cs
    startLine: 75
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.Commands
  summary: Checks the parameters provided for the Reset command.
  remarks: >-
    Since the Reset command does not take any parameters, this method does not perform any validation.

    It remains empty to ensure that no unexpected behavior occurs when no parameters are provided.
  example: []
  syntax:
    content: public override void CheckParameters(string[] parameterList)
    parameters:
    - id: parameterList
      type: System.String[]
      description: An array of string parameters. This list is ignored since no parameters are required for the Reset command.
    content.vb: Public Overrides Sub CheckParameters(parameterList As String())
  overridden: BOOSE.CommandOneParameter.CheckParameters(System.String[])
  overload: ASE_Assignment.Commands.CommandReset.CheckParameters*
  nameWithType.vb: CommandReset.CheckParameters(String())
  fullName.vb: ASE_Assignment.Commands.CommandReset.CheckParameters(String())
  name.vb: CheckParameters(String())
references:
- uid: ASE_Assignment.Commands.CommandReset
  commentId: T:ASE_Assignment.Commands.CommandReset
  href: ASE_Assignment.Commands.CommandReset.html
  name: CommandReset
  nameWithType: CommandReset
  fullName: ASE_Assignment.Commands.CommandReset
- uid: ASE_Assignment.Commands.CommandClear
  commentId: T:ASE_Assignment.Commands.CommandClear
  href: ASE_Assignment.Commands.CommandClear.html
  name: CommandClear
  nameWithType: CommandClear
  fullName: ASE_Assignment.Commands.CommandClear
- uid: ASE_Assignment.Commands
  commentId: N:ASE_Assignment.Commands
  href: ASE_Assignment.html
  name: ASE_Assignment.Commands
  nameWithType: ASE_Assignment.Commands
  fullName: ASE_Assignment.Commands
  spec.csharp:
  - uid: ASE_Assignment
    name: ASE_Assignment
    href: ASE_Assignment.html
  - name: .
  - uid: ASE_Assignment.Commands
    name: Commands
    href: ASE_Assignment.Commands.html
  spec.vb:
  - uid: ASE_Assignment
    name: ASE_Assignment
    href: ASE_Assignment.html
  - name: .
  - uid: ASE_Assignment.Commands
    name: Commands
    href: ASE_Assignment.Commands.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: BOOSE.Command
  commentId: T:BOOSE.Command
  parent: BOOSE
  isExternal: true
  name: Command
  nameWithType: Command
  fullName: BOOSE.Command
- uid: BOOSE.CanvasCommand
  commentId: T:BOOSE.CanvasCommand
  parent: BOOSE
  isExternal: true
  name: CanvasCommand
  nameWithType: CanvasCommand
  fullName: BOOSE.CanvasCommand
- uid: BOOSE.CommandOneParameter
  commentId: T:BOOSE.CommandOneParameter
  parent: BOOSE
  isExternal: true
  name: CommandOneParameter
  nameWithType: CommandOneParameter
  fullName: BOOSE.CommandOneParameter
- uid: BOOSE.ICommand
  commentId: T:BOOSE.ICommand
  parent: BOOSE
  isExternal: true
  name: ICommand
  nameWithType: ICommand
  fullName: BOOSE.ICommand
- uid: BOOSE.CommandOneParameter.param1
  commentId: F:BOOSE.CommandOneParameter.param1
  parent: BOOSE.CommandOneParameter
  isExternal: true
  name: param1
  nameWithType: CommandOneParameter.param1
  fullName: BOOSE.CommandOneParameter.param1
- uid: BOOSE.CommandOneParameter.param1unprocessed
  commentId: F:BOOSE.CommandOneParameter.param1unprocessed
  parent: BOOSE.CommandOneParameter
  isExternal: true
  name: param1unprocessed
  nameWithType: CommandOneParameter.param1unprocessed
  fullName: BOOSE.CommandOneParameter.param1unprocessed
- uid: BOOSE.CanvasCommand.yPos
  commentId: F:BOOSE.CanvasCommand.yPos
  parent: BOOSE.CanvasCommand
  isExternal: true
  name: yPos
  nameWithType: CanvasCommand.yPos
  fullName: BOOSE.CanvasCommand.yPos
- uid: BOOSE.CanvasCommand.xPos
  commentId: F:BOOSE.CanvasCommand.xPos
  parent: BOOSE.CanvasCommand
  isExternal: true
  name: xPos
  nameWithType: CanvasCommand.xPos
  fullName: BOOSE.CanvasCommand.xPos
- uid: BOOSE.CanvasCommand.canvas
  commentId: F:BOOSE.CanvasCommand.canvas
  parent: BOOSE.CanvasCommand
  isExternal: true
  name: canvas
  nameWithType: CanvasCommand.canvas
  fullName: BOOSE.CanvasCommand.canvas
- uid: BOOSE.CanvasCommand.Canvas
  commentId: P:BOOSE.CanvasCommand.Canvas
  parent: BOOSE.CanvasCommand
  isExternal: true
  name: Canvas
  nameWithType: CanvasCommand.Canvas
  fullName: BOOSE.CanvasCommand.Canvas
- uid: BOOSE.Command.program
  commentId: F:BOOSE.Command.program
  parent: BOOSE.Command
  isExternal: true
  name: program
  nameWithType: Command.program
  fullName: BOOSE.Command.program
- uid: BOOSE.Command.parameterList
  commentId: F:BOOSE.Command.parameterList
  parent: BOOSE.Command
  isExternal: true
  name: parameterList
  nameWithType: Command.parameterList
  fullName: BOOSE.Command.parameterList
- uid: BOOSE.Command.parameters
  commentId: F:BOOSE.Command.parameters
  parent: BOOSE.Command
  isExternal: true
  name: parameters
  nameWithType: Command.parameters
  fullName: BOOSE.Command.parameters
- uid: BOOSE.Command.paramsint
  commentId: F:BOOSE.Command.paramsint
  parent: BOOSE.Command
  isExternal: true
  name: paramsint
  nameWithType: Command.paramsint
  fullName: BOOSE.Command.paramsint
- uid: BOOSE.Command.Set(BOOSE.StoredProgram,System.String)
  commentId: M:BOOSE.Command.Set(BOOSE.StoredProgram,System.String)
  parent: BOOSE.Command
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Set(StoredProgram, string)
  nameWithType: Command.Set(StoredProgram, string)
  fullName: BOOSE.Command.Set(BOOSE.StoredProgram, string)
  nameWithType.vb: Command.Set(StoredProgram, String)
  fullName.vb: BOOSE.Command.Set(BOOSE.StoredProgram, String)
  name.vb: Set(StoredProgram, String)
  spec.csharp:
  - uid: BOOSE.Command.Set(BOOSE.StoredProgram,System.String)
    name: Set
    isExternal: true
  - name: (
  - uid: BOOSE.StoredProgram
    name: StoredProgram
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: BOOSE.Command.Set(BOOSE.StoredProgram,System.String)
    name: Set
    isExternal: true
  - name: (
  - uid: BOOSE.StoredProgram
    name: StoredProgram
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: BOOSE.Command.Compile
  commentId: M:BOOSE.Command.Compile
  parent: BOOSE.Command
  isExternal: true
  name: Compile()
  nameWithType: Command.Compile()
  fullName: BOOSE.Command.Compile()
  spec.csharp:
  - uid: BOOSE.Command.Compile
    name: Compile
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: BOOSE.Command.Compile
    name: Compile
    isExternal: true
  - name: (
  - name: )
- uid: BOOSE.Command.ProcessParameters(System.String)
  commentId: M:BOOSE.Command.ProcessParameters(System.String)
  parent: BOOSE.Command
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ProcessParameters(string)
  nameWithType: Command.ProcessParameters(string)
  fullName: BOOSE.Command.ProcessParameters(string)
  nameWithType.vb: Command.ProcessParameters(String)
  fullName.vb: BOOSE.Command.ProcessParameters(String)
  name.vb: ProcessParameters(String)
  spec.csharp:
  - uid: BOOSE.Command.ProcessParameters(System.String)
    name: ProcessParameters
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: BOOSE.Command.ProcessParameters(System.String)
    name: ProcessParameters
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: BOOSE.Command.ToString
  commentId: M:BOOSE.Command.ToString
  parent: BOOSE.Command
  isExternal: true
  name: ToString()
  nameWithType: Command.ToString()
  fullName: BOOSE.Command.ToString()
  spec.csharp:
  - uid: BOOSE.Command.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: BOOSE.Command.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: BOOSE.Command.Program
  commentId: P:BOOSE.Command.Program
  parent: BOOSE.Command
  isExternal: true
  name: Program
  nameWithType: Command.Program
  fullName: BOOSE.Command.Program
- uid: BOOSE.Command.Name
  commentId: P:BOOSE.Command.Name
  parent: BOOSE.Command
  isExternal: true
  name: Name
  nameWithType: Command.Name
  fullName: BOOSE.Command.Name
- uid: BOOSE.Command.ParameterList
  commentId: P:BOOSE.Command.ParameterList
  parent: BOOSE.Command
  isExternal: true
  name: ParameterList
  nameWithType: Command.ParameterList
  fullName: BOOSE.Command.ParameterList
- uid: BOOSE.Command.Parameters
  commentId: P:BOOSE.Command.Parameters
  parent: BOOSE.Command
  isExternal: true
  name: Parameters
  nameWithType: Command.Parameters
  fullName: BOOSE.Command.Parameters
- uid: BOOSE.Command.Paramsint
  commentId: P:BOOSE.Command.Paramsint
  parent: BOOSE.Command
  isExternal: true
  name: Paramsint
  nameWithType: Command.Paramsint
  fullName: BOOSE.Command.Paramsint
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: BOOSE
  commentId: N:BOOSE
  isExternal: true
  name: BOOSE
  nameWithType: BOOSE
  fullName: BOOSE
- uid: ASE_Assignment.Commands.CommandReset.Execute
  commentId: M:ASE_Assignment.Commands.CommandReset.Execute
  href: ASE_Assignment.Commands.CommandReset.html#ASE_Assignment_Commands_CommandReset_Execute
  name: Execute()
  nameWithType: CommandReset.Execute()
  fullName: ASE_Assignment.Commands.CommandReset.Execute()
  spec.csharp:
  - uid: ASE_Assignment.Commands.CommandReset.Execute
    name: Execute
    href: ASE_Assignment.Commands.CommandReset.html#ASE_Assignment_Commands_CommandReset_Execute
  - name: (
  - name: )
  spec.vb:
  - uid: ASE_Assignment.Commands.CommandReset.Execute
    name: Execute
    href: ASE_Assignment.Commands.CommandReset.html#ASE_Assignment_Commands_CommandReset_Execute
  - name: (
  - name: )
- uid: ASE_Assignment.Commands.CommandReset.#ctor*
  commentId: Overload:ASE_Assignment.Commands.CommandReset.#ctor
  href: ASE_Assignment.Commands.CommandReset.html#ASE_Assignment_Commands_CommandReset__ctor
  name: CommandReset
  nameWithType: CommandReset.CommandReset
  fullName: ASE_Assignment.Commands.CommandReset.CommandReset
  nameWithType.vb: CommandReset.New
  fullName.vb: ASE_Assignment.Commands.CommandReset.New
  name.vb: New
- uid: BOOSE.Canvas
  commentId: T:BOOSE.Canvas
  parent: BOOSE
  isExternal: true
  name: Canvas
  nameWithType: Canvas
  fullName: BOOSE.Canvas
- uid: BOOSE.Canvas.Reset
  commentId: M:BOOSE.Canvas.Reset
  isExternal: true
  name: Reset()
  nameWithType: Canvas.Reset()
  fullName: BOOSE.Canvas.Reset()
  spec.csharp:
  - uid: BOOSE.Canvas.Reset
    name: Reset
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: BOOSE.Canvas.Reset
    name: Reset
    isExternal: true
  - name: (
  - name: )
- uid: BOOSE.Command.Execute
  commentId: M:BOOSE.Command.Execute
  parent: BOOSE.Command
  isExternal: true
  name: Execute()
  nameWithType: Command.Execute()
  fullName: BOOSE.Command.Execute()
  spec.csharp:
  - uid: BOOSE.Command.Execute
    name: Execute
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: BOOSE.Command.Execute
    name: Execute
    isExternal: true
  - name: (
  - name: )
- uid: ASE_Assignment.Commands.CommandReset.Execute*
  commentId: Overload:ASE_Assignment.Commands.CommandReset.Execute
  href: ASE_Assignment.Commands.CommandReset.html#ASE_Assignment_Commands_CommandReset_Execute
  name: Execute
  nameWithType: CommandReset.Execute
  fullName: ASE_Assignment.Commands.CommandReset.Execute
- uid: BOOSE.CommandOneParameter.CheckParameters(System.String[])
  commentId: M:BOOSE.CommandOneParameter.CheckParameters(System.String[])
  parent: BOOSE.CommandOneParameter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: CheckParameters(string[])
  nameWithType: CommandOneParameter.CheckParameters(string[])
  fullName: BOOSE.CommandOneParameter.CheckParameters(string[])
  nameWithType.vb: CommandOneParameter.CheckParameters(String())
  fullName.vb: BOOSE.CommandOneParameter.CheckParameters(String())
  name.vb: CheckParameters(String())
  spec.csharp:
  - uid: BOOSE.CommandOneParameter.CheckParameters(System.String[])
    name: CheckParameters
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: BOOSE.CommandOneParameter.CheckParameters(System.String[])
    name: CheckParameters
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: ASE_Assignment.Commands.CommandReset.CheckParameters*
  commentId: Overload:ASE_Assignment.Commands.CommandReset.CheckParameters
  href: ASE_Assignment.Commands.CommandReset.html#ASE_Assignment_Commands_CommandReset_CheckParameters_System_String___
  name: CheckParameters
  nameWithType: CommandReset.CheckParameters
  fullName: ASE_Assignment.Commands.CommandReset.CheckParameters
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
