### YamlMime:ManagedReference
items:
- uid: ASE_Assignment.DataTypes.DataTypeArray
  commentId: T:ASE_Assignment.DataTypes.DataTypeArray
  id: DataTypeArray
  parent: ASE_Assignment.DataTypes
  children:
  - ASE_Assignment.DataTypes.DataTypeArray.#ctor
  - ASE_Assignment.DataTypes.DataTypeArray.ArrayRestrictions
  - ASE_Assignment.DataTypes.DataTypeArray.CheckParameters(System.String[])
  - ASE_Assignment.DataTypes.DataTypeArray.Columns
  - ASE_Assignment.DataTypes.DataTypeArray.Compile
  - ASE_Assignment.DataTypes.DataTypeArray.Execute
  - ASE_Assignment.DataTypes.DataTypeArray.GetIntArray(System.Int32,System.Int32)
  - ASE_Assignment.DataTypes.DataTypeArray.GetRealArray(System.Int32,System.Int32)
  - ASE_Assignment.DataTypes.DataTypeArray.IntValue
  - ASE_Assignment.DataTypes.DataTypeArray.PEEK
  - ASE_Assignment.DataTypes.DataTypeArray.POKE
  - ASE_Assignment.DataTypes.DataTypeArray.ProcessArrayParametersCompile(System.Boolean)
  - ASE_Assignment.DataTypes.DataTypeArray.ProcessArrayParametersExecute(System.Boolean)
  - ASE_Assignment.DataTypes.DataTypeArray.RealValue
  - ASE_Assignment.DataTypes.DataTypeArray.ReduceRestrictionCounter
  - ASE_Assignment.DataTypes.DataTypeArray.Rows
  - ASE_Assignment.DataTypes.DataTypeArray.SetIntArray(System.Int32,System.Int32,System.Int32)
  - ASE_Assignment.DataTypes.DataTypeArray.SetRealArray(System.Double,System.Int32,System.Int32)
  - ASE_Assignment.DataTypes.DataTypeArray.columnCurrent
  - ASE_Assignment.DataTypes.DataTypeArray.columnExpression
  - ASE_Assignment.DataTypes.DataTypeArray.columnsCount
  - ASE_Assignment.DataTypes.DataTypeArray.intArray
  - ASE_Assignment.DataTypes.DataTypeArray.peekValue
  - ASE_Assignment.DataTypes.DataTypeArray.pokeValue
  - ASE_Assignment.DataTypes.DataTypeArray.realArray
  - ASE_Assignment.DataTypes.DataTypeArray.rowCurrent
  - ASE_Assignment.DataTypes.DataTypeArray.rowExpression
  - ASE_Assignment.DataTypes.DataTypeArray.rowsCount
  - ASE_Assignment.DataTypes.DataTypeArray.type
  langs:
  - csharp
  - vb
  name: DataTypeArray
  nameWithType: DataTypeArray
  fullName: ASE_Assignment.DataTypes.DataTypeArray
  type: Class
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: DataTypeArray
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 19
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: >-
    Represents an array implementation for performing operations such as read (PEEK) and write (POKE).

    Provides support for both integer and double data types and handles multi-dimensional arrays.
  remarks: >-
    This class extends the Evaluation class and introduces functionality to define, compile, and operate on arrays.

    It supports integer and real (double) arrays, and allows for dynamic row and column specifications.
  example: []
  syntax:
    content: 'public class DataTypeArray : Evaluation, ICommand'
    content.vb: Public Class DataTypeArray Inherits Evaluation Implements ICommand
  inheritance:
  - System.Object
  - BOOSE.Command
  - BOOSE.Evaluation
  derivedClasses:
  - ASE_Assignment.Commands.CommandPeek
  - ASE_Assignment.Commands.CommandPoke
  implements:
  - BOOSE.ICommand
  inheritedMembers:
  - BOOSE.Evaluation.expression
  - BOOSE.Evaluation.evaluatedExpression
  - BOOSE.Evaluation.varName
  - BOOSE.Evaluation.value
  - BOOSE.Evaluation.ProcessExpression(System.String)
  - BOOSE.Evaluation.Expression
  - BOOSE.Evaluation.VarName
  - BOOSE.Evaluation.Value
  - BOOSE.Evaluation.Local
  - BOOSE.Command.program
  - BOOSE.Command.parameterList
  - BOOSE.Command.parameters
  - BOOSE.Command.paramsint
  - BOOSE.Command.Set(BOOSE.StoredProgram,System.String)
  - BOOSE.Command.ProcessParameters(System.String)
  - BOOSE.Command.ToString
  - BOOSE.Command.Program
  - BOOSE.Command.Name
  - BOOSE.Command.ParameterList
  - BOOSE.Command.Parameters
  - BOOSE.Command.Paramsint
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: ASE_Assignment.DataTypes.DataTypeArray.PEEK
  commentId: F:ASE_Assignment.DataTypes.DataTypeArray.PEEK
  id: PEEK
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: PEEK
  nameWithType: DataTypeArray.PEEK
  fullName: ASE_Assignment.DataTypes.DataTypeArray.PEEK
  type: Field
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: PEEK
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 24
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: Constant indicating a PEEK operation (read from the array).
  example: []
  syntax:
    content: protected const bool PEEK = false
    return:
      type: System.Boolean
    content.vb: Protected Const PEEK As Boolean = False
- uid: ASE_Assignment.DataTypes.DataTypeArray.POKE
  commentId: F:ASE_Assignment.DataTypes.DataTypeArray.POKE
  id: POKE
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: POKE
  nameWithType: DataTypeArray.POKE
  fullName: ASE_Assignment.DataTypes.DataTypeArray.POKE
  type: Field
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: POKE
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 28
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: Constant indicating a POKE operation (write to the array).
  example: []
  syntax:
    content: public const bool POKE = true
    return:
      type: System.Boolean
    content.vb: Public Const POKE As Boolean = True
- uid: ASE_Assignment.DataTypes.DataTypeArray.type
  commentId: F:ASE_Assignment.DataTypes.DataTypeArray.type
  id: type
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: type
  nameWithType: DataTypeArray.type
  fullName: ASE_Assignment.DataTypes.DataTypeArray.type
  type: Field
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: type
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 32
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: The type of the array (e.g., "int" or "real").
  example: []
  syntax:
    content: protected string type
    return:
      type: System.String
    content.vb: Protected type As String
- uid: ASE_Assignment.DataTypes.DataTypeArray.IntValue
  commentId: F:ASE_Assignment.DataTypes.DataTypeArray.IntValue
  id: IntValue
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: IntValue
  nameWithType: DataTypeArray.IntValue
  fullName: ASE_Assignment.DataTypes.DataTypeArray.IntValue
  type: Field
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: IntValue
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 34
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  syntax:
    content: protected int IntValue
    return:
      type: System.Int32
    content.vb: Protected IntValue As Integer
- uid: ASE_Assignment.DataTypes.DataTypeArray.RealValue
  commentId: F:ASE_Assignment.DataTypes.DataTypeArray.RealValue
  id: RealValue
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: RealValue
  nameWithType: DataTypeArray.RealValue
  fullName: ASE_Assignment.DataTypes.DataTypeArray.RealValue
  type: Field
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: RealValue
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 35
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  syntax:
    content: protected double RealValue
    return:
      type: System.Double
    content.vb: Protected RealValue As Double
- uid: ASE_Assignment.DataTypes.DataTypeArray.rowsCount
  commentId: F:ASE_Assignment.DataTypes.DataTypeArray.rowsCount
  id: rowsCount
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: rowsCount
  nameWithType: DataTypeArray.rowsCount
  fullName: ASE_Assignment.DataTypes.DataTypeArray.rowsCount
  type: Field
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: rowsCount
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 40
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: Number of rows in the array.
  example: []
  syntax:
    content: protected int rowsCount
    return:
      type: System.Int32
    content.vb: Protected rowsCount As Integer
- uid: ASE_Assignment.DataTypes.DataTypeArray.columnsCount
  commentId: F:ASE_Assignment.DataTypes.DataTypeArray.columnsCount
  id: columnsCount
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: columnsCount
  nameWithType: DataTypeArray.columnsCount
  fullName: ASE_Assignment.DataTypes.DataTypeArray.columnsCount
  type: Field
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: columnsCount
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 44
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: Number of columns in the array (default is 1).
  example: []
  syntax:
    content: protected int columnsCount
    return:
      type: System.Int32
    content.vb: Protected columnsCount As Integer
- uid: ASE_Assignment.DataTypes.DataTypeArray.intArray
  commentId: F:ASE_Assignment.DataTypes.DataTypeArray.intArray
  id: intArray
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: intArray
  nameWithType: DataTypeArray.intArray
  fullName: ASE_Assignment.DataTypes.DataTypeArray.intArray
  type: Field
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: intArray
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 48
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: Storage for integer arrays.
  example: []
  syntax:
    content: protected int[,] intArray
    return:
      type: System.Int32[,]
    content.vb: Protected intArray As Integer(,)
- uid: ASE_Assignment.DataTypes.DataTypeArray.realArray
  commentId: F:ASE_Assignment.DataTypes.DataTypeArray.realArray
  id: realArray
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: realArray
  nameWithType: DataTypeArray.realArray
  fullName: ASE_Assignment.DataTypes.DataTypeArray.realArray
  type: Field
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: realArray
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 52
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: Storage for double arrays.
  example: []
  syntax:
    content: protected double[,] realArray
    return:
      type: System.Double[,]
    content.vb: Protected realArray As Double(,)
- uid: ASE_Assignment.DataTypes.DataTypeArray.pokeValue
  commentId: F:ASE_Assignment.DataTypes.DataTypeArray.pokeValue
  id: pokeValue
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: pokeValue
  nameWithType: DataTypeArray.pokeValue
  fullName: ASE_Assignment.DataTypes.DataTypeArray.pokeValue
  type: Field
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: pokeValue
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 62
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: The value to be written into the array during a <code>Poke</code> operation.
  remarks: >-
    This field is populated during the compile or execute phase of the <code>Poke</code> command.

    It represents the value to be assigned to a specific cell in the array.
  example: []
  syntax:
    content: protected string pokeValue
    return:
      type: System.String
    content.vb: Protected pokeValue As String
- uid: ASE_Assignment.DataTypes.DataTypeArray.peekValue
  commentId: F:ASE_Assignment.DataTypes.DataTypeArray.peekValue
  id: peekValue
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: peekValue
  nameWithType: DataTypeArray.peekValue
  fullName: ASE_Assignment.DataTypes.DataTypeArray.peekValue
  type: Field
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: peekValue
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 70
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: The value to be written into the array during a <code>Poke</code> operation.
  remarks: >-
    This field is populated during the compile or execute phase of the <code>Poke</code> command.

    It represents the value to be assigned to a specific cell in the array.
  example: []
  syntax:
    content: protected string peekValue
    return:
      type: System.String
    content.vb: Protected peekValue As String
- uid: ASE_Assignment.DataTypes.DataTypeArray.rowExpression
  commentId: F:ASE_Assignment.DataTypes.DataTypeArray.rowExpression
  id: rowExpression
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: rowExpression
  nameWithType: DataTypeArray.rowExpression
  fullName: ASE_Assignment.DataTypes.DataTypeArray.rowExpression
  type: Field
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: rowExpression
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 78
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: An expression representing the row index in the array.
  remarks: >-
    This field can be a literal value or an expression to be evaluated during runtime.

    It is resolved into an integer index during the execution phase of array operations.
  example: []
  syntax:
    content: protected string rowExpression
    return:
      type: System.String
    content.vb: Protected rowExpression As String
- uid: ASE_Assignment.DataTypes.DataTypeArray.columnExpression
  commentId: F:ASE_Assignment.DataTypes.DataTypeArray.columnExpression
  id: columnExpression
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: columnExpression
  nameWithType: DataTypeArray.columnExpression
  fullName: ASE_Assignment.DataTypes.DataTypeArray.columnExpression
  type: Field
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: columnExpression
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 86
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: An expression representing the column index in the array.
  remarks: >-
    This field can be a literal value or an expression to be evaluated during runtime.

    It is resolved into an integer index during the execution phase of array operations.
  example: []
  syntax:
    content: protected string columnExpression
    return:
      type: System.String
    content.vb: Protected columnExpression As String
- uid: ASE_Assignment.DataTypes.DataTypeArray.rowCurrent
  commentId: F:ASE_Assignment.DataTypes.DataTypeArray.rowCurrent
  id: rowCurrent
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: rowCurrent
  nameWithType: DataTypeArray.rowCurrent
  fullName: ASE_Assignment.DataTypes.DataTypeArray.rowCurrent
  type: Field
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: rowCurrent
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 94
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: The resolved row index used for accessing the array.
  remarks: >-
    This field is calculated from <xref href="ASE_Assignment.DataTypes.DataTypeArray.rowExpression" data-throw-if-not-resolved="false"></xref> during the execution phase.

    It represents the actual row index for accessing a specific cell in the array.
  example: []
  syntax:
    content: protected int rowCurrent
    return:
      type: System.Int32
    content.vb: Protected rowCurrent As Integer
- uid: ASE_Assignment.DataTypes.DataTypeArray.columnCurrent
  commentId: F:ASE_Assignment.DataTypes.DataTypeArray.columnCurrent
  id: columnCurrent
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: columnCurrent
  nameWithType: DataTypeArray.columnCurrent
  fullName: ASE_Assignment.DataTypes.DataTypeArray.columnCurrent
  type: Field
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: columnCurrent
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 102
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: The resolved column index used for accessing the array.
  remarks: >-
    This field is calculated from <xref href="ASE_Assignment.DataTypes.DataTypeArray.columnExpression" data-throw-if-not-resolved="false"></xref> during the execution phase.

    It represents the actual column index for accessing a specific cell in the array.
  example: []
  syntax:
    content: protected int columnCurrent
    return:
      type: System.Int32
    content.vb: Protected columnCurrent As Integer
- uid: ASE_Assignment.DataTypes.DataTypeArray.Rows
  commentId: P:ASE_Assignment.DataTypes.DataTypeArray.Rows
  id: Rows
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: Rows
  nameWithType: DataTypeArray.Rows
  fullName: ASE_Assignment.DataTypes.DataTypeArray.Rows
  type: Property
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: Rows
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 120
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: Gets the number of rows in the array.
  remarks: >-
    This property provides a read-only access to the number of rows configured

    in the array. It is calculated from the <code>rows</code> field.
  example: []
  syntax:
    content: protected int Rows { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Protected ReadOnly Property Rows As Integer
  overload: ASE_Assignment.DataTypes.DataTypeArray.Rows*
- uid: ASE_Assignment.DataTypes.DataTypeArray.Columns
  commentId: P:ASE_Assignment.DataTypes.DataTypeArray.Columns
  id: Columns
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: Columns
  nameWithType: DataTypeArray.Columns
  fullName: ASE_Assignment.DataTypes.DataTypeArray.Columns
  type: Property
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: Columns
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 128
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: Gets the number of columns in the array.
  remarks: >-
    This property provides a read-only access to the number of columns configured

    in the array. It is calculated from the <code>columns</code> field.
  example: []
  syntax:
    content: protected int Columns { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Protected ReadOnly Property Columns As Integer
  overload: ASE_Assignment.DataTypes.DataTypeArray.Columns*
- uid: ASE_Assignment.DataTypes.DataTypeArray.#ctor
  commentId: M:ASE_Assignment.DataTypes.DataTypeArray.#ctor
  id: '#ctor'
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: DataTypeArray()
  nameWithType: DataTypeArray.DataTypeArray()
  fullName: ASE_Assignment.DataTypes.DataTypeArray.DataTypeArray()
  type: Constructor
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: .ctor
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 137
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  syntax:
    content: public DataTypeArray()
    content.vb: Public Sub New()
  overload: ASE_Assignment.DataTypes.DataTypeArray.#ctor*
  nameWithType.vb: DataTypeArray.New()
  fullName.vb: ASE_Assignment.DataTypes.DataTypeArray.New()
  name.vb: New()
- uid: ASE_Assignment.DataTypes.DataTypeArray.ArrayRestrictions
  commentId: M:ASE_Assignment.DataTypes.DataTypeArray.ArrayRestrictions
  id: ArrayRestrictions
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: ArrayRestrictions()
  nameWithType: DataTypeArray.ArrayRestrictions()
  fullName: ASE_Assignment.DataTypes.DataTypeArray.ArrayRestrictions()
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: ArrayRestrictions
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 152
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: Enforces restrictions on the number of array instances allowed.
  remarks: >-
    This method is used to validate that the number of created instances does not exceed

    the allowed limit. If the limit is exceeded, it should throw an exception to prevent

    further creation of instances.
  example: []
  syntax:
    content: public void ArrayRestrictions()
    content.vb: Public Sub ArrayRestrictions()
  overload: ASE_Assignment.DataTypes.DataTypeArray.ArrayRestrictions*
  exceptions:
  - type: BOOSE.RestrictionException
    commentId: T:BOOSE.RestrictionException
    description: Thrown when the number of instances exceeds the allowed limit.
- uid: ASE_Assignment.DataTypes.DataTypeArray.ReduceRestrictionCounter
  commentId: M:ASE_Assignment.DataTypes.DataTypeArray.ReduceRestrictionCounter
  id: ReduceRestrictionCounter
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: ReduceRestrictionCounter()
  nameWithType: DataTypeArray.ReduceRestrictionCounter()
  fullName: ASE_Assignment.DataTypes.DataTypeArray.ReduceRestrictionCounter()
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: ReduceRestrictionCounter
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 164
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: Reduces the restriction counter for the array if required.
  remarks: >-
    This method is used to decrease the restriction counter, potentially allowing more instances

    or operations involving arrays. The specific implementation depends on the restriction logic.
  example: []
  syntax:
    content: protected void ReduceRestrictionCounter()
    content.vb: Protected Sub ReduceRestrictionCounter()
  overload: ASE_Assignment.DataTypes.DataTypeArray.ReduceRestrictionCounter*
- uid: ASE_Assignment.DataTypes.DataTypeArray.Compile
  commentId: M:ASE_Assignment.DataTypes.DataTypeArray.Compile
  id: Compile
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: Compile()
  nameWithType: DataTypeArray.Compile()
  fullName: ASE_Assignment.DataTypes.DataTypeArray.Compile()
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: Compile
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 180
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: Compiles the array definition, parsing its type, rows, and columns.
  remarks: >-
    This method extracts the array's type, row count, and column count from the parameters.

    It validates the array type and ensures the parameters are in the correct format. If validation

    fails, a <xref href="BOOSE.CommandException" data-throw-if-not-resolved="false"></xref> is thrown.
  example: []
  syntax:
    content: public override void Compile()
    content.vb: Public Overrides Sub Compile()
  overridden: BOOSE.Evaluation.Compile
  overload: ASE_Assignment.DataTypes.DataTypeArray.Compile*
  exceptions:
  - type: BOOSE.CommandException
    commentId: T:BOOSE.CommandException
    description: Thrown when the array type is invalid or the parameters are in an incorrect format.
- uid: ASE_Assignment.DataTypes.DataTypeArray.CheckParameters(System.String[])
  commentId: M:ASE_Assignment.DataTypes.DataTypeArray.CheckParameters(System.String[])
  id: CheckParameters(System.String[])
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: CheckParameters(string[])
  nameWithType: DataTypeArray.CheckParameters(string[])
  fullName: ASE_Assignment.DataTypes.DataTypeArray.CheckParameters(string[])
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: CheckParameters
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 227
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: Validates the parameters for the array definition.
  remarks: >-
    This method checks that the parameter list contains either 3 or 4 parameters:

    <ul><li>The array type (e.g., "int" or "real").</li><li>The variable name for the array.</li><li>The number of rows (required).</li><li>The number of columns (optional).</li></ul>

    If validation fails, a <xref href="BOOSE.CommandException" data-throw-if-not-resolved="false"></xref> is thrown.
  example: []
  syntax:
    content: public override void CheckParameters(string[] parameterList)
    parameters:
    - id: parameterList
      type: System.String[]
      description: The list of parameters to validate.
    content.vb: Public Overrides Sub CheckParameters(parameterList As String())
  overridden: BOOSE.Evaluation.CheckParameters(System.String[])
  overload: ASE_Assignment.DataTypes.DataTypeArray.CheckParameters*
  exceptions:
  - type: BOOSE.CommandException
    commentId: T:BOOSE.CommandException
    description: >-
      Thrown when the parameter list is null, has an incorrect number of parameters,

      or contains invalid values.
  nameWithType.vb: DataTypeArray.CheckParameters(String())
  fullName.vb: ASE_Assignment.DataTypes.DataTypeArray.CheckParameters(String())
  name.vb: CheckParameters(String())
- uid: ASE_Assignment.DataTypes.DataTypeArray.Execute
  commentId: M:ASE_Assignment.DataTypes.DataTypeArray.Execute
  id: Execute
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: DataTypeArray.Execute()
  fullName: ASE_Assignment.DataTypes.DataTypeArray.Execute()
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: Execute
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 249
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: Executes the array operation by initializing the array based on its type.
  remarks: >-
    This method handles the initialization of either an integer array or a real (double) array.

    If the array type is unsupported, a <xref href="BOOSE.CommandException" data-throw-if-not-resolved="false"></xref> is thrown.
  example: []
  syntax:
    content: public override void Execute()
    content.vb: Public Overrides Sub Execute()
  overridden: BOOSE.Evaluation.Execute
  overload: ASE_Assignment.DataTypes.DataTypeArray.Execute*
  exceptions:
  - type: BOOSE.CommandException
    commentId: T:BOOSE.CommandException
    description: Thrown when the array type is unsupported.
- uid: ASE_Assignment.DataTypes.DataTypeArray.ProcessArrayParametersCompile(System.Boolean)
  commentId: M:ASE_Assignment.DataTypes.DataTypeArray.ProcessArrayParametersCompile(System.Boolean)
  id: ProcessArrayParametersCompile(System.Boolean)
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: ProcessArrayParametersCompile(bool)
  nameWithType: DataTypeArray.ProcessArrayParametersCompile(bool)
  fullName: ASE_Assignment.DataTypes.DataTypeArray.ProcessArrayParametersCompile(bool)
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: ProcessArrayParametersCompile
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 278
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: Compiles the parameters for PEEK or POKE operations.
  remarks: >-
    This method parses the parameter list, identifies the array variable and index expressions,

    and prepares for execution by validating syntax and ensuring the variable exists in the program.
  example: []
  syntax:
    content: protected virtual void ProcessArrayParametersCompile(bool isPokeOperation)
    parameters:
    - id: isPokeOperation
      type: System.Boolean
      description: Indicates whether the operation is a POKE (true) or PEEK (false).
    content.vb: Protected Overridable Sub ProcessArrayParametersCompile(isPokeOperation As Boolean)
  overload: ASE_Assignment.DataTypes.DataTypeArray.ProcessArrayParametersCompile*
  exceptions:
  - type: BOOSE.CommandException
    commentId: T:BOOSE.CommandException
    description: Thrown when the syntax is invalid or the array variable does not exist.
  nameWithType.vb: DataTypeArray.ProcessArrayParametersCompile(Boolean)
  fullName.vb: ASE_Assignment.DataTypes.DataTypeArray.ProcessArrayParametersCompile(Boolean)
  name.vb: ProcessArrayParametersCompile(Boolean)
- uid: ASE_Assignment.DataTypes.DataTypeArray.ProcessArrayParametersExecute(System.Boolean)
  commentId: M:ASE_Assignment.DataTypes.DataTypeArray.ProcessArrayParametersExecute(System.Boolean)
  id: ProcessArrayParametersExecute(System.Boolean)
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: ProcessArrayParametersExecute(bool)
  nameWithType: DataTypeArray.ProcessArrayParametersExecute(bool)
  fullName: ASE_Assignment.DataTypes.DataTypeArray.ProcessArrayParametersExecute(bool)
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: ProcessArrayParametersExecute
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 328
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: Executes the parameters for PEEK or POKE operations.
  remarks: >-
    This method resolves the row and column indices, validates the array type,

    and performs the specified operation (PEEK or POKE) on the array.
  example: []
  syntax:
    content: protected virtual void ProcessArrayParametersExecute(bool isPokeOperation)
    parameters:
    - id: isPokeOperation
      type: System.Boolean
      description: Indicates whether the operation is a POKE (true) or PEEK (false).
    content.vb: Protected Overridable Sub ProcessArrayParametersExecute(isPokeOperation As Boolean)
  overload: ASE_Assignment.DataTypes.DataTypeArray.ProcessArrayParametersExecute*
  exceptions:
  - type: BOOSE.CommandException
    commentId: T:BOOSE.CommandException
    description: Thrown when the row or column indices are invalid, or the value type is mismatched.
  nameWithType.vb: DataTypeArray.ProcessArrayParametersExecute(Boolean)
  fullName.vb: ASE_Assignment.DataTypes.DataTypeArray.ProcessArrayParametersExecute(Boolean)
  name.vb: ProcessArrayParametersExecute(Boolean)
- uid: ASE_Assignment.DataTypes.DataTypeArray.SetIntArray(System.Int32,System.Int32,System.Int32)
  commentId: M:ASE_Assignment.DataTypes.DataTypeArray.SetIntArray(System.Int32,System.Int32,System.Int32)
  id: SetIntArray(System.Int32,System.Int32,System.Int32)
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: SetIntArray(int, int, int)
  nameWithType: DataTypeArray.SetIntArray(int, int, int)
  fullName: ASE_Assignment.DataTypes.DataTypeArray.SetIntArray(int, int, int)
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: SetIntArray
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 412
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: Sets the value of an integer element in the array at the specified row and column.
  remarks: >-
    This method validates the indices before setting the value. If the indices are out of bounds,

    a <xref href="BOOSE.CommandException" data-throw-if-not-resolved="false"></xref> is thrown.
  example: []
  syntax:
    content: public virtual void SetIntArray(int value, int row, int col)
    parameters:
    - id: value
      type: System.Int32
      description: The integer value to set in the array.
    - id: row
      type: System.Int32
      description: The row index where the value will be set.
    - id: col
      type: System.Int32
      description: The column index where the value will be set.
    content.vb: Public Overridable Sub SetIntArray(value As Integer, row As Integer, col As Integer)
  overload: ASE_Assignment.DataTypes.DataTypeArray.SetIntArray*
  exceptions:
  - type: BOOSE.CommandException
    commentId: T:BOOSE.CommandException
    description: Thrown when the specified row or column index is out of bounds.
  nameWithType.vb: DataTypeArray.SetIntArray(Integer, Integer, Integer)
  fullName.vb: ASE_Assignment.DataTypes.DataTypeArray.SetIntArray(Integer, Integer, Integer)
  name.vb: SetIntArray(Integer, Integer, Integer)
- uid: ASE_Assignment.DataTypes.DataTypeArray.SetRealArray(System.Double,System.Int32,System.Int32)
  commentId: M:ASE_Assignment.DataTypes.DataTypeArray.SetRealArray(System.Double,System.Int32,System.Int32)
  id: SetRealArray(System.Double,System.Int32,System.Int32)
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: SetRealArray(double, int, int)
  nameWithType: DataTypeArray.SetRealArray(double, int, int)
  fullName: ASE_Assignment.DataTypes.DataTypeArray.SetRealArray(double, int, int)
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: SetRealArray
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 429
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: Sets the value of a real (double) element in the array at the specified row and column.
  remarks: >-
    This method validates the indices before setting the value. If the indices are out of bounds,

    a <xref href="BOOSE.CommandException" data-throw-if-not-resolved="false"></xref> is thrown.
  example: []
  syntax:
    content: public virtual void SetRealArray(double value, int row, int col)
    parameters:
    - id: value
      type: System.Double
      description: The double value to set in the array.
    - id: row
      type: System.Int32
      description: The row index where the value will be set.
    - id: col
      type: System.Int32
      description: The column index where the value will be set.
    content.vb: Public Overridable Sub SetRealArray(value As Double, row As Integer, col As Integer)
  overload: ASE_Assignment.DataTypes.DataTypeArray.SetRealArray*
  exceptions:
  - type: BOOSE.CommandException
    commentId: T:BOOSE.CommandException
    description: Thrown when the specified row or column index is out of bounds.
  nameWithType.vb: DataTypeArray.SetRealArray(Double, Integer, Integer)
  fullName.vb: ASE_Assignment.DataTypes.DataTypeArray.SetRealArray(Double, Integer, Integer)
  name.vb: SetRealArray(Double, Integer, Integer)
- uid: ASE_Assignment.DataTypes.DataTypeArray.GetIntArray(System.Int32,System.Int32)
  commentId: M:ASE_Assignment.DataTypes.DataTypeArray.GetIntArray(System.Int32,System.Int32)
  id: GetIntArray(System.Int32,System.Int32)
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: GetIntArray(int, int)
  nameWithType: DataTypeArray.GetIntArray(int, int)
  fullName: ASE_Assignment.DataTypes.DataTypeArray.GetIntArray(int, int)
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: GetIntArray
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 446
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  summary: Retrieves the value of an integer element in the array at the specified row and column.
  remarks: >-
    This method validates the indices before retrieving the value. If the indices are out of bounds,

    a <xref href="BOOSE.CommandException" data-throw-if-not-resolved="false"></xref> is thrown.
  example: []
  syntax:
    content: public virtual int GetIntArray(int row, int col)
    parameters:
    - id: row
      type: System.Int32
      description: The row index from which the value will be retrieved.
    - id: col
      type: System.Int32
      description: The column index from which the value will be retrieved.
    return:
      type: System.Int32
      description: The integer value at the specified row and column in the array.
    content.vb: Public Overridable Function GetIntArray(row As Integer, col As Integer) As Integer
  overload: ASE_Assignment.DataTypes.DataTypeArray.GetIntArray*
  exceptions:
  - type: BOOSE.CommandException
    commentId: T:BOOSE.CommandException
    description: Thrown when the specified row or column index is out of bounds.
  nameWithType.vb: DataTypeArray.GetIntArray(Integer, Integer)
  fullName.vb: ASE_Assignment.DataTypes.DataTypeArray.GetIntArray(Integer, Integer)
  name.vb: GetIntArray(Integer, Integer)
- uid: ASE_Assignment.DataTypes.DataTypeArray.GetRealArray(System.Int32,System.Int32)
  commentId: M:ASE_Assignment.DataTypes.DataTypeArray.GetRealArray(System.Int32,System.Int32)
  id: GetRealArray(System.Int32,System.Int32)
  parent: ASE_Assignment.DataTypes.DataTypeArray
  langs:
  - csharp
  - vb
  name: GetRealArray(int, int)
  nameWithType: DataTypeArray.GetRealArray(int, int)
  fullName: ASE_Assignment.DataTypes.DataTypeArray.GetRealArray(int, int)
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment/DataTypes/DataTypeArray.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: GetRealArray
    path: ASE_Assignment/DataTypes/DataTypeArray.cs
    startLine: 463
  assemblies:
  - ASE_Assignment
  namespace: ASE_Assignment.DataTypes
  syntax:
    content: public virtual double GetRealArray(int row, int col)
    parameters:
    - id: row
      type: System.Int32
    - id: col
      type: System.Int32
    return:
      type: System.Double
    content.vb: Public Overridable Function GetRealArray(row As Integer, col As Integer) As Double
  overload: ASE_Assignment.DataTypes.DataTypeArray.GetRealArray*
  nameWithType.vb: DataTypeArray.GetRealArray(Integer, Integer)
  fullName.vb: ASE_Assignment.DataTypes.DataTypeArray.GetRealArray(Integer, Integer)
  name.vb: GetRealArray(Integer, Integer)
references:
- uid: ASE_Assignment.DataTypes
  commentId: N:ASE_Assignment.DataTypes
  href: ASE_Assignment.html
  name: ASE_Assignment.DataTypes
  nameWithType: ASE_Assignment.DataTypes
  fullName: ASE_Assignment.DataTypes
  spec.csharp:
  - uid: ASE_Assignment
    name: ASE_Assignment
    href: ASE_Assignment.html
  - name: .
  - uid: ASE_Assignment.DataTypes
    name: DataTypes
    href: ASE_Assignment.DataTypes.html
  spec.vb:
  - uid: ASE_Assignment
    name: ASE_Assignment
    href: ASE_Assignment.html
  - name: .
  - uid: ASE_Assignment.DataTypes
    name: DataTypes
    href: ASE_Assignment.DataTypes.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: BOOSE.Command
  commentId: T:BOOSE.Command
  parent: BOOSE
  isExternal: true
  name: Command
  nameWithType: Command
  fullName: BOOSE.Command
- uid: BOOSE.Evaluation
  commentId: T:BOOSE.Evaluation
  parent: BOOSE
  isExternal: true
  name: Evaluation
  nameWithType: Evaluation
  fullName: BOOSE.Evaluation
- uid: BOOSE.ICommand
  commentId: T:BOOSE.ICommand
  parent: BOOSE
  isExternal: true
  name: ICommand
  nameWithType: ICommand
  fullName: BOOSE.ICommand
- uid: BOOSE.Evaluation.expression
  commentId: F:BOOSE.Evaluation.expression
  parent: BOOSE.Evaluation
  isExternal: true
  name: expression
  nameWithType: Evaluation.expression
  fullName: BOOSE.Evaluation.expression
- uid: BOOSE.Evaluation.evaluatedExpression
  commentId: F:BOOSE.Evaluation.evaluatedExpression
  parent: BOOSE.Evaluation
  isExternal: true
  name: evaluatedExpression
  nameWithType: Evaluation.evaluatedExpression
  fullName: BOOSE.Evaluation.evaluatedExpression
- uid: BOOSE.Evaluation.varName
  commentId: F:BOOSE.Evaluation.varName
  parent: BOOSE.Evaluation
  isExternal: true
  name: varName
  nameWithType: Evaluation.varName
  fullName: BOOSE.Evaluation.varName
- uid: BOOSE.Evaluation.value
  commentId: F:BOOSE.Evaluation.value
  parent: BOOSE.Evaluation
  isExternal: true
  name: value
  nameWithType: Evaluation.value
  fullName: BOOSE.Evaluation.value
- uid: BOOSE.Evaluation.ProcessExpression(System.String)
  commentId: M:BOOSE.Evaluation.ProcessExpression(System.String)
  parent: BOOSE.Evaluation
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ProcessExpression(string)
  nameWithType: Evaluation.ProcessExpression(string)
  fullName: BOOSE.Evaluation.ProcessExpression(string)
  nameWithType.vb: Evaluation.ProcessExpression(String)
  fullName.vb: BOOSE.Evaluation.ProcessExpression(String)
  name.vb: ProcessExpression(String)
  spec.csharp:
  - uid: BOOSE.Evaluation.ProcessExpression(System.String)
    name: ProcessExpression
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: BOOSE.Evaluation.ProcessExpression(System.String)
    name: ProcessExpression
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: BOOSE.Evaluation.Expression
  commentId: P:BOOSE.Evaluation.Expression
  parent: BOOSE.Evaluation
  isExternal: true
  name: Expression
  nameWithType: Evaluation.Expression
  fullName: BOOSE.Evaluation.Expression
- uid: BOOSE.Evaluation.VarName
  commentId: P:BOOSE.Evaluation.VarName
  parent: BOOSE.Evaluation
  isExternal: true
  name: VarName
  nameWithType: Evaluation.VarName
  fullName: BOOSE.Evaluation.VarName
- uid: BOOSE.Evaluation.Value
  commentId: P:BOOSE.Evaluation.Value
  parent: BOOSE.Evaluation
  isExternal: true
  name: Value
  nameWithType: Evaluation.Value
  fullName: BOOSE.Evaluation.Value
- uid: BOOSE.Evaluation.Local
  commentId: P:BOOSE.Evaluation.Local
  parent: BOOSE.Evaluation
  isExternal: true
  name: Local
  nameWithType: Evaluation.Local
  fullName: BOOSE.Evaluation.Local
- uid: BOOSE.Command.program
  commentId: F:BOOSE.Command.program
  parent: BOOSE.Command
  isExternal: true
  name: program
  nameWithType: Command.program
  fullName: BOOSE.Command.program
- uid: BOOSE.Command.parameterList
  commentId: F:BOOSE.Command.parameterList
  parent: BOOSE.Command
  isExternal: true
  name: parameterList
  nameWithType: Command.parameterList
  fullName: BOOSE.Command.parameterList
- uid: BOOSE.Command.parameters
  commentId: F:BOOSE.Command.parameters
  parent: BOOSE.Command
  isExternal: true
  name: parameters
  nameWithType: Command.parameters
  fullName: BOOSE.Command.parameters
- uid: BOOSE.Command.paramsint
  commentId: F:BOOSE.Command.paramsint
  parent: BOOSE.Command
  isExternal: true
  name: paramsint
  nameWithType: Command.paramsint
  fullName: BOOSE.Command.paramsint
- uid: BOOSE.Command.Set(BOOSE.StoredProgram,System.String)
  commentId: M:BOOSE.Command.Set(BOOSE.StoredProgram,System.String)
  parent: BOOSE.Command
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Set(StoredProgram, string)
  nameWithType: Command.Set(StoredProgram, string)
  fullName: BOOSE.Command.Set(BOOSE.StoredProgram, string)
  nameWithType.vb: Command.Set(StoredProgram, String)
  fullName.vb: BOOSE.Command.Set(BOOSE.StoredProgram, String)
  name.vb: Set(StoredProgram, String)
  spec.csharp:
  - uid: BOOSE.Command.Set(BOOSE.StoredProgram,System.String)
    name: Set
    isExternal: true
  - name: (
  - uid: BOOSE.StoredProgram
    name: StoredProgram
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: BOOSE.Command.Set(BOOSE.StoredProgram,System.String)
    name: Set
    isExternal: true
  - name: (
  - uid: BOOSE.StoredProgram
    name: StoredProgram
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: BOOSE.Command.ProcessParameters(System.String)
  commentId: M:BOOSE.Command.ProcessParameters(System.String)
  parent: BOOSE.Command
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: ProcessParameters(string)
  nameWithType: Command.ProcessParameters(string)
  fullName: BOOSE.Command.ProcessParameters(string)
  nameWithType.vb: Command.ProcessParameters(String)
  fullName.vb: BOOSE.Command.ProcessParameters(String)
  name.vb: ProcessParameters(String)
  spec.csharp:
  - uid: BOOSE.Command.ProcessParameters(System.String)
    name: ProcessParameters
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: BOOSE.Command.ProcessParameters(System.String)
    name: ProcessParameters
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: BOOSE.Command.ToString
  commentId: M:BOOSE.Command.ToString
  parent: BOOSE.Command
  isExternal: true
  name: ToString()
  nameWithType: Command.ToString()
  fullName: BOOSE.Command.ToString()
  spec.csharp:
  - uid: BOOSE.Command.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: BOOSE.Command.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: BOOSE.Command.Program
  commentId: P:BOOSE.Command.Program
  parent: BOOSE.Command
  isExternal: true
  name: Program
  nameWithType: Command.Program
  fullName: BOOSE.Command.Program
- uid: BOOSE.Command.Name
  commentId: P:BOOSE.Command.Name
  parent: BOOSE.Command
  isExternal: true
  name: Name
  nameWithType: Command.Name
  fullName: BOOSE.Command.Name
- uid: BOOSE.Command.ParameterList
  commentId: P:BOOSE.Command.ParameterList
  parent: BOOSE.Command
  isExternal: true
  name: ParameterList
  nameWithType: Command.ParameterList
  fullName: BOOSE.Command.ParameterList
- uid: BOOSE.Command.Parameters
  commentId: P:BOOSE.Command.Parameters
  parent: BOOSE.Command
  isExternal: true
  name: Parameters
  nameWithType: Command.Parameters
  fullName: BOOSE.Command.Parameters
- uid: BOOSE.Command.Paramsint
  commentId: P:BOOSE.Command.Paramsint
  parent: BOOSE.Command
  isExternal: true
  name: Paramsint
  nameWithType: Command.Paramsint
  fullName: BOOSE.Command.Paramsint
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: BOOSE
  commentId: N:BOOSE
  isExternal: true
  name: BOOSE
  nameWithType: BOOSE
  fullName: BOOSE
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Int32[,]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[,]
  nameWithType: int[,]
  fullName: int[,]
  nameWithType.vb: Integer(,)
  fullName.vb: Integer(,)
  name.vb: Integer(,)
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: ','
  - name: )
- uid: System.Double[,]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double[,]
  nameWithType: double[,]
  fullName: double[,]
  nameWithType.vb: Double(,)
  fullName.vb: Double(,)
  name.vb: Double(,)
  spec.csharp:
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: (
  - name: ','
  - name: )
- uid: ASE_Assignment.DataTypes.DataTypeArray.rowExpression
  commentId: F:ASE_Assignment.DataTypes.DataTypeArray.rowExpression
  parent: ASE_Assignment.DataTypes.DataTypeArray
  href: ASE_Assignment.DataTypes.DataTypeArray.html#ASE_Assignment_DataTypes_DataTypeArray_rowExpression
  name: rowExpression
  nameWithType: DataTypeArray.rowExpression
  fullName: ASE_Assignment.DataTypes.DataTypeArray.rowExpression
- uid: ASE_Assignment.DataTypes.DataTypeArray
  commentId: T:ASE_Assignment.DataTypes.DataTypeArray
  parent: ASE_Assignment.DataTypes
  href: ASE_Assignment.DataTypes.DataTypeArray.html
  name: DataTypeArray
  nameWithType: DataTypeArray
  fullName: ASE_Assignment.DataTypes.DataTypeArray
- uid: ASE_Assignment.DataTypes.DataTypeArray.columnExpression
  commentId: F:ASE_Assignment.DataTypes.DataTypeArray.columnExpression
  parent: ASE_Assignment.DataTypes.DataTypeArray
  href: ASE_Assignment.DataTypes.DataTypeArray.html#ASE_Assignment_DataTypes_DataTypeArray_columnExpression
  name: columnExpression
  nameWithType: DataTypeArray.columnExpression
  fullName: ASE_Assignment.DataTypes.DataTypeArray.columnExpression
- uid: ASE_Assignment.DataTypes.DataTypeArray.Rows*
  commentId: Overload:ASE_Assignment.DataTypes.DataTypeArray.Rows
  href: ASE_Assignment.DataTypes.DataTypeArray.html#ASE_Assignment_DataTypes_DataTypeArray_Rows
  name: Rows
  nameWithType: DataTypeArray.Rows
  fullName: ASE_Assignment.DataTypes.DataTypeArray.Rows
- uid: ASE_Assignment.DataTypes.DataTypeArray.Columns*
  commentId: Overload:ASE_Assignment.DataTypes.DataTypeArray.Columns
  href: ASE_Assignment.DataTypes.DataTypeArray.html#ASE_Assignment_DataTypes_DataTypeArray_Columns
  name: Columns
  nameWithType: DataTypeArray.Columns
  fullName: ASE_Assignment.DataTypes.DataTypeArray.Columns
- uid: ASE_Assignment.DataTypes.DataTypeArray.#ctor*
  commentId: Overload:ASE_Assignment.DataTypes.DataTypeArray.#ctor
  href: ASE_Assignment.DataTypes.DataTypeArray.html#ASE_Assignment_DataTypes_DataTypeArray__ctor
  name: DataTypeArray
  nameWithType: DataTypeArray.DataTypeArray
  fullName: ASE_Assignment.DataTypes.DataTypeArray.DataTypeArray
  nameWithType.vb: DataTypeArray.New
  fullName.vb: ASE_Assignment.DataTypes.DataTypeArray.New
  name.vb: New
- uid: BOOSE.RestrictionException
  commentId: T:BOOSE.RestrictionException
  isExternal: true
  name: RestrictionException
  nameWithType: RestrictionException
  fullName: BOOSE.RestrictionException
- uid: ASE_Assignment.DataTypes.DataTypeArray.ArrayRestrictions*
  commentId: Overload:ASE_Assignment.DataTypes.DataTypeArray.ArrayRestrictions
  href: ASE_Assignment.DataTypes.DataTypeArray.html#ASE_Assignment_DataTypes_DataTypeArray_ArrayRestrictions
  name: ArrayRestrictions
  nameWithType: DataTypeArray.ArrayRestrictions
  fullName: ASE_Assignment.DataTypes.DataTypeArray.ArrayRestrictions
- uid: ASE_Assignment.DataTypes.DataTypeArray.ReduceRestrictionCounter*
  commentId: Overload:ASE_Assignment.DataTypes.DataTypeArray.ReduceRestrictionCounter
  href: ASE_Assignment.DataTypes.DataTypeArray.html#ASE_Assignment_DataTypes_DataTypeArray_ReduceRestrictionCounter
  name: ReduceRestrictionCounter
  nameWithType: DataTypeArray.ReduceRestrictionCounter
  fullName: ASE_Assignment.DataTypes.DataTypeArray.ReduceRestrictionCounter
- uid: BOOSE.CommandException
  commentId: T:BOOSE.CommandException
  parent: BOOSE
  isExternal: true
  name: CommandException
  nameWithType: CommandException
  fullName: BOOSE.CommandException
- uid: BOOSE.Evaluation.Compile
  commentId: M:BOOSE.Evaluation.Compile
  parent: BOOSE.Evaluation
  isExternal: true
  name: Compile()
  nameWithType: Evaluation.Compile()
  fullName: BOOSE.Evaluation.Compile()
  spec.csharp:
  - uid: BOOSE.Evaluation.Compile
    name: Compile
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: BOOSE.Evaluation.Compile
    name: Compile
    isExternal: true
  - name: (
  - name: )
- uid: ASE_Assignment.DataTypes.DataTypeArray.Compile*
  commentId: Overload:ASE_Assignment.DataTypes.DataTypeArray.Compile
  href: ASE_Assignment.DataTypes.DataTypeArray.html#ASE_Assignment_DataTypes_DataTypeArray_Compile
  name: Compile
  nameWithType: DataTypeArray.Compile
  fullName: ASE_Assignment.DataTypes.DataTypeArray.Compile
- uid: BOOSE.Evaluation.CheckParameters(System.String[])
  commentId: M:BOOSE.Evaluation.CheckParameters(System.String[])
  parent: BOOSE.Evaluation
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: CheckParameters(string[])
  nameWithType: Evaluation.CheckParameters(string[])
  fullName: BOOSE.Evaluation.CheckParameters(string[])
  nameWithType.vb: Evaluation.CheckParameters(String())
  fullName.vb: BOOSE.Evaluation.CheckParameters(String())
  name.vb: CheckParameters(String())
  spec.csharp:
  - uid: BOOSE.Evaluation.CheckParameters(System.String[])
    name: CheckParameters
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: BOOSE.Evaluation.CheckParameters(System.String[])
    name: CheckParameters
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: ASE_Assignment.DataTypes.DataTypeArray.CheckParameters*
  commentId: Overload:ASE_Assignment.DataTypes.DataTypeArray.CheckParameters
  href: ASE_Assignment.DataTypes.DataTypeArray.html#ASE_Assignment_DataTypes_DataTypeArray_CheckParameters_System_String___
  name: CheckParameters
  nameWithType: DataTypeArray.CheckParameters
  fullName: ASE_Assignment.DataTypes.DataTypeArray.CheckParameters
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: BOOSE.Evaluation.Execute
  commentId: M:BOOSE.Evaluation.Execute
  parent: BOOSE.Evaluation
  isExternal: true
  name: Execute()
  nameWithType: Evaluation.Execute()
  fullName: BOOSE.Evaluation.Execute()
  spec.csharp:
  - uid: BOOSE.Evaluation.Execute
    name: Execute
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: BOOSE.Evaluation.Execute
    name: Execute
    isExternal: true
  - name: (
  - name: )
- uid: ASE_Assignment.DataTypes.DataTypeArray.Execute*
  commentId: Overload:ASE_Assignment.DataTypes.DataTypeArray.Execute
  href: ASE_Assignment.DataTypes.DataTypeArray.html#ASE_Assignment_DataTypes_DataTypeArray_Execute
  name: Execute
  nameWithType: DataTypeArray.Execute
  fullName: ASE_Assignment.DataTypes.DataTypeArray.Execute
- uid: ASE_Assignment.DataTypes.DataTypeArray.ProcessArrayParametersCompile*
  commentId: Overload:ASE_Assignment.DataTypes.DataTypeArray.ProcessArrayParametersCompile
  href: ASE_Assignment.DataTypes.DataTypeArray.html#ASE_Assignment_DataTypes_DataTypeArray_ProcessArrayParametersCompile_System_Boolean_
  name: ProcessArrayParametersCompile
  nameWithType: DataTypeArray.ProcessArrayParametersCompile
  fullName: ASE_Assignment.DataTypes.DataTypeArray.ProcessArrayParametersCompile
- uid: ASE_Assignment.DataTypes.DataTypeArray.ProcessArrayParametersExecute*
  commentId: Overload:ASE_Assignment.DataTypes.DataTypeArray.ProcessArrayParametersExecute
  href: ASE_Assignment.DataTypes.DataTypeArray.html#ASE_Assignment_DataTypes_DataTypeArray_ProcessArrayParametersExecute_System_Boolean_
  name: ProcessArrayParametersExecute
  nameWithType: DataTypeArray.ProcessArrayParametersExecute
  fullName: ASE_Assignment.DataTypes.DataTypeArray.ProcessArrayParametersExecute
- uid: ASE_Assignment.DataTypes.DataTypeArray.SetIntArray*
  commentId: Overload:ASE_Assignment.DataTypes.DataTypeArray.SetIntArray
  href: ASE_Assignment.DataTypes.DataTypeArray.html#ASE_Assignment_DataTypes_DataTypeArray_SetIntArray_System_Int32_System_Int32_System_Int32_
  name: SetIntArray
  nameWithType: DataTypeArray.SetIntArray
  fullName: ASE_Assignment.DataTypes.DataTypeArray.SetIntArray
- uid: ASE_Assignment.DataTypes.DataTypeArray.SetRealArray*
  commentId: Overload:ASE_Assignment.DataTypes.DataTypeArray.SetRealArray
  href: ASE_Assignment.DataTypes.DataTypeArray.html#ASE_Assignment_DataTypes_DataTypeArray_SetRealArray_System_Double_System_Int32_System_Int32_
  name: SetRealArray
  nameWithType: DataTypeArray.SetRealArray
  fullName: ASE_Assignment.DataTypes.DataTypeArray.SetRealArray
- uid: ASE_Assignment.DataTypes.DataTypeArray.GetIntArray*
  commentId: Overload:ASE_Assignment.DataTypes.DataTypeArray.GetIntArray
  href: ASE_Assignment.DataTypes.DataTypeArray.html#ASE_Assignment_DataTypes_DataTypeArray_GetIntArray_System_Int32_System_Int32_
  name: GetIntArray
  nameWithType: DataTypeArray.GetIntArray
  fullName: ASE_Assignment.DataTypes.DataTypeArray.GetIntArray
- uid: ASE_Assignment.DataTypes.DataTypeArray.GetRealArray*
  commentId: Overload:ASE_Assignment.DataTypes.DataTypeArray.GetRealArray
  href: ASE_Assignment.DataTypes.DataTypeArray.html#ASE_Assignment_DataTypes_DataTypeArray_GetRealArray_System_Int32_System_Int32_
  name: GetRealArray
  nameWithType: DataTypeArray.GetRealArray
  fullName: ASE_Assignment.DataTypes.DataTypeArray.GetRealArray
