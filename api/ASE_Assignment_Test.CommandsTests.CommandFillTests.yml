### YamlMime:ManagedReference
items:
- uid: ASE_Assignment_Test.CommandsTests.CommandFillTests
  commentId: T:ASE_Assignment_Test.CommandsTests.CommandFillTests
  id: CommandFillTests
  parent: ASE_Assignment_Test.CommandsTests
  children:
  - ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithEmptyString_ShouldLogCommandException
  - ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithIncorrectNumberOfParameters_ShouldLogCommandException
  - ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithNullParameter_ShouldLogCommandException
  - ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithValidFalse_ShouldNotLogError
  - ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithValidTrue_ShouldNotLogError
  - ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithWhitespaceString_ShouldLogCommandException
  - ASE_Assignment_Test.CommandsTests.CommandFillTests.Fill_ParameterizedConstructor_WithNullText_ShouldThrowArgumentNullException
  - ASE_Assignment_Test.CommandsTests.CommandFillTests.TestInitialize
  langs:
  - csharp
  - vb
  name: CommandFillTests
  nameWithType: CommandFillTests
  fullName: ASE_Assignment_Test.CommandsTests.CommandFillTests
  type: Class
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment_Test/CommandsTests/CommandFillTests.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: CommandFillTests
    path: ASE_Assignment_Test/CommandsTests/CommandFillTests.cs
    startLine: 15
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test.CommandsTests
  summary: Unit tests for the <code>CommandFill</code> command to validate its behavior, parameter validation, and exception handling.
  example: []
  syntax:
    content: >-
      [TestClass]

      public class CommandFillTests
    content.vb: >-
      <TestClass>

      Public Class CommandFillTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandsTests.CommandFillTests.TestInitialize
  commentId: M:ASE_Assignment_Test.CommandsTests.CommandFillTests.TestInitialize
  id: TestInitialize
  parent: ASE_Assignment_Test.CommandsTests.CommandFillTests
  langs:
  - csharp
  - vb
  name: TestInitialize()
  nameWithType: CommandFillTests.TestInitialize()
  fullName: ASE_Assignment_Test.CommandsTests.CommandFillTests.TestInitialize()
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment_Test/CommandsTests/CommandFillTests.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: TestInitialize
    path: ASE_Assignment_Test/CommandsTests/CommandFillTests.cs
    startLine: 46
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test.CommandsTests
  summary: Initializes the test environment before each test.
  remarks: >-
    This method resets the global exception message, initializes a mock <code>Canvas</code>, 

    and creates an instance of the <code>CommandFill</code> command with valid default parameters.
  example: []
  syntax:
    content: >-
      [TestInitialize]

      public void TestInitialize()
    content.vb: >-
      <TestInitialize>

      Public Sub TestInitialize()
  overload: ASE_Assignment_Test.CommandsTests.CommandFillTests.TestInitialize*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandsTests.CommandFillTests.Fill_ParameterizedConstructor_WithNullText_ShouldThrowArgumentNullException
  commentId: M:ASE_Assignment_Test.CommandsTests.CommandFillTests.Fill_ParameterizedConstructor_WithNullText_ShouldThrowArgumentNullException
  id: Fill_ParameterizedConstructor_WithNullText_ShouldThrowArgumentNullException
  parent: ASE_Assignment_Test.CommandsTests.CommandFillTests
  langs:
  - csharp
  - vb
  name: Fill_ParameterizedConstructor_WithNullText_ShouldThrowArgumentNullException()
  nameWithType: CommandFillTests.Fill_ParameterizedConstructor_WithNullText_ShouldThrowArgumentNullException()
  fullName: ASE_Assignment_Test.CommandsTests.CommandFillTests.Fill_ParameterizedConstructor_WithNullText_ShouldThrowArgumentNullException()
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment_Test/CommandsTests/CommandFillTests.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: Fill_ParameterizedConstructor_WithNullText_ShouldThrowArgumentNullException
    path: ASE_Assignment_Test/CommandsTests/CommandFillTests.cs
    startLine: 66
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test.CommandsTests
  summary: Tests the parameterized constructor of the <code>CommandFill</code> command to ensure it throws an <code>ArgumentNullException</code> when initialized with a null parameter.
  remarks: This test ensures that the <code>CommandFill</code> command correctly handles null input during construction.
  example:
  - >-
    <pre><code class="lang-csharp">string nullText = null;

    CommandFill paramFillCommand = new CommandFill(mockCanvas.Object, nullText); // Should throw ArgumentNullException</code></pre>
  syntax:
    content: >-
      [TestMethod]

      [ExpectedException(typeof(ArgumentNullException))]

      public void Fill_ParameterizedConstructor_WithNullText_ShouldThrowArgumentNullException()
    content.vb: >-
      <TestMethod>

      <ExpectedException(GetType(ArgumentNullException))>

      Public Sub Fill_ParameterizedConstructor_WithNullText_ShouldThrowArgumentNullException()
  overload: ASE_Assignment_Test.CommandsTests.CommandFillTests.Fill_ParameterizedConstructor_WithNullText_ShouldThrowArgumentNullException*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.ArgumentNullException
- uid: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithValidTrue_ShouldNotLogError
  commentId: M:ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithValidTrue_ShouldNotLogError
  id: CheckParameters_WithValidTrue_ShouldNotLogError
  parent: ASE_Assignment_Test.CommandsTests.CommandFillTests
  langs:
  - csharp
  - vb
  name: CheckParameters_WithValidTrue_ShouldNotLogError()
  nameWithType: CommandFillTests.CheckParameters_WithValidTrue_ShouldNotLogError()
  fullName: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithValidTrue_ShouldNotLogError()
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment_Test/CommandsTests/CommandFillTests.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: CheckParameters_WithValidTrue_ShouldNotLogError
    path: ASE_Assignment_Test/CommandsTests/CommandFillTests.cs
    startLine: 93
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test.CommandsTests
  summary: Tests the <code>CheckParameters</code> method with a valid "true" parameter to ensure no error is logged.
  remarks: Validates that the <code>CommandFill</code> command correctly processes the "true" parameter without errors.
  example:
  - >-
    <pre><code class="lang-csharp">string[] validParameters = { "true" };

    fillCommand.CheckParameters(validParameters);

    Assert.AreEqual(string.Empty, ProgramGlobalVariables.OutputExceptionMsg);</code></pre>
  syntax:
    content: >-
      [TestMethod]

      public void CheckParameters_WithValidTrue_ShouldNotLogError()
    content.vb: >-
      <TestMethod>

      Public Sub CheckParameters_WithValidTrue_ShouldNotLogError()
  overload: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithValidTrue_ShouldNotLogError*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithValidFalse_ShouldNotLogError
  commentId: M:ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithValidFalse_ShouldNotLogError
  id: CheckParameters_WithValidFalse_ShouldNotLogError
  parent: ASE_Assignment_Test.CommandsTests.CommandFillTests
  langs:
  - csharp
  - vb
  name: CheckParameters_WithValidFalse_ShouldNotLogError()
  nameWithType: CommandFillTests.CheckParameters_WithValidFalse_ShouldNotLogError()
  fullName: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithValidFalse_ShouldNotLogError()
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment_Test/CommandsTests/CommandFillTests.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: CheckParameters_WithValidFalse_ShouldNotLogError
    path: ASE_Assignment_Test/CommandsTests/CommandFillTests.cs
    startLine: 114
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test.CommandsTests
  summary: Tests the <code>CheckParameters</code> method with a valid "false" parameter to ensure no error is logged.
  remarks: Validates that the <code>CommandFill</code> command correctly processes the "false" parameter without errors.
  example:
  - >-
    <pre><code class="lang-csharp">string[] validParameters = { "false" };

    fillCommand.CheckParameters(validParameters);

    Assert.AreEqual(string.Empty, ProgramGlobalVariables.OutputExceptionMsg);</code></pre>
  syntax:
    content: >-
      [TestMethod]

      public void CheckParameters_WithValidFalse_ShouldNotLogError()
    content.vb: >-
      <TestMethod>

      Public Sub CheckParameters_WithValidFalse_ShouldNotLogError()
  overload: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithValidFalse_ShouldNotLogError*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithIncorrectNumberOfParameters_ShouldLogCommandException
  commentId: M:ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithIncorrectNumberOfParameters_ShouldLogCommandException
  id: CheckParameters_WithIncorrectNumberOfParameters_ShouldLogCommandException
  parent: ASE_Assignment_Test.CommandsTests.CommandFillTests
  langs:
  - csharp
  - vb
  name: CheckParameters_WithIncorrectNumberOfParameters_ShouldLogCommandException()
  nameWithType: CommandFillTests.CheckParameters_WithIncorrectNumberOfParameters_ShouldLogCommandException()
  fullName: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithIncorrectNumberOfParameters_ShouldLogCommandException()
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment_Test/CommandsTests/CommandFillTests.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: CheckParameters_WithIncorrectNumberOfParameters_ShouldLogCommandException
    path: ASE_Assignment_Test/CommandsTests/CommandFillTests.cs
    startLine: 135
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test.CommandsTests
  summary: Tests the <code>CheckParameters</code> method with an incorrect number of parameters to ensure a <code>Command Exception</code> is logged.
  remarks: Validates that providing more than one parameter results in an appropriate error message.
  example:
  - >-
    <pre><code class="lang-csharp">string[] invalidParameters = { "true", "false" };

    fillCommand.CheckParameters(invalidParameters);

    StringAssert.Contains(ProgramGlobalVariables.OutputExceptionMsg, "Invalid number of parameters.");</code></pre>
  syntax:
    content: >-
      [TestMethod]

      public void CheckParameters_WithIncorrectNumberOfParameters_ShouldLogCommandException()
    content.vb: >-
      <TestMethod>

      Public Sub CheckParameters_WithIncorrectNumberOfParameters_ShouldLogCommandException()
  overload: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithIncorrectNumberOfParameters_ShouldLogCommandException*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithNullParameter_ShouldLogCommandException
  commentId: M:ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithNullParameter_ShouldLogCommandException
  id: CheckParameters_WithNullParameter_ShouldLogCommandException
  parent: ASE_Assignment_Test.CommandsTests.CommandFillTests
  langs:
  - csharp
  - vb
  name: CheckParameters_WithNullParameter_ShouldLogCommandException()
  nameWithType: CommandFillTests.CheckParameters_WithNullParameter_ShouldLogCommandException()
  fullName: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithNullParameter_ShouldLogCommandException()
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment_Test/CommandsTests/CommandFillTests.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: CheckParameters_WithNullParameter_ShouldLogCommandException
    path: ASE_Assignment_Test/CommandsTests/CommandFillTests.cs
    startLine: 156
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test.CommandsTests
  summary: Tests the <code>CheckParameters</code> method with a null parameter to ensure a <code>Command Exception</code> is logged.
  remarks: Validates that null input is handled gracefully with an appropriate error message.
  example:
  - >-
    <pre><code class="lang-csharp">string[] invalidParameters = { null };

    fillCommand.CheckParameters(invalidParameters);

    StringAssert.Contains(ProgramGlobalVariables.OutputExceptionMsg, "Text parameter cannot be null.");</code></pre>
  syntax:
    content: >-
      [TestMethod]

      public void CheckParameters_WithNullParameter_ShouldLogCommandException()
    content.vb: >-
      <TestMethod>

      Public Sub CheckParameters_WithNullParameter_ShouldLogCommandException()
  overload: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithNullParameter_ShouldLogCommandException*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithEmptyString_ShouldLogCommandException
  commentId: M:ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithEmptyString_ShouldLogCommandException
  id: CheckParameters_WithEmptyString_ShouldLogCommandException
  parent: ASE_Assignment_Test.CommandsTests.CommandFillTests
  langs:
  - csharp
  - vb
  name: CheckParameters_WithEmptyString_ShouldLogCommandException()
  nameWithType: CommandFillTests.CheckParameters_WithEmptyString_ShouldLogCommandException()
  fullName: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithEmptyString_ShouldLogCommandException()
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment_Test/CommandsTests/CommandFillTests.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: CheckParameters_WithEmptyString_ShouldLogCommandException
    path: ASE_Assignment_Test/CommandsTests/CommandFillTests.cs
    startLine: 177
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test.CommandsTests
  summary: Tests the <code>CheckParameters</code> method with an empty string parameter to ensure a <code>Command Exception</code> is logged.
  remarks: Validates that empty string input is handled gracefully with an appropriate error message.
  example:
  - >-
    <pre><code class="lang-csharp">string[] invalidParameters = { "" };

    fillCommand.CheckParameters(invalidParameters);

    StringAssert.Contains(ProgramGlobalVariables.OutputExceptionMsg, "Text parameter cannot be null.");</code></pre>
  syntax:
    content: >-
      [TestMethod]

      public void CheckParameters_WithEmptyString_ShouldLogCommandException()
    content.vb: >-
      <TestMethod>

      Public Sub CheckParameters_WithEmptyString_ShouldLogCommandException()
  overload: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithEmptyString_ShouldLogCommandException*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithWhitespaceString_ShouldLogCommandException
  commentId: M:ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithWhitespaceString_ShouldLogCommandException
  id: CheckParameters_WithWhitespaceString_ShouldLogCommandException
  parent: ASE_Assignment_Test.CommandsTests.CommandFillTests
  langs:
  - csharp
  - vb
  name: CheckParameters_WithWhitespaceString_ShouldLogCommandException()
  nameWithType: CommandFillTests.CheckParameters_WithWhitespaceString_ShouldLogCommandException()
  fullName: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithWhitespaceString_ShouldLogCommandException()
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment_Test/CommandsTests/CommandFillTests.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: CheckParameters_WithWhitespaceString_ShouldLogCommandException
    path: ASE_Assignment_Test/CommandsTests/CommandFillTests.cs
    startLine: 198
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test.CommandsTests
  summary: Tests the <code>CheckParameters</code> method with a whitespace string parameter to ensure a <code>Command Exception</code> is logged.
  remarks: Validates that whitespace input is handled gracefully with an appropriate error message.
  example:
  - >-
    <pre><code class="lang-csharp">string[] invalidParameters = { "   " };

    fillCommand.CheckParameters(invalidParameters);

    StringAssert.Contains(ProgramGlobalVariables.OutputExceptionMsg, "Text parameter cannot be null.");</code></pre>
  syntax:
    content: >-
      [TestMethod]

      public void CheckParameters_WithWhitespaceString_ShouldLogCommandException()
    content.vb: >-
      <TestMethod>

      Public Sub CheckParameters_WithWhitespaceString_ShouldLogCommandException()
  overload: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithWhitespaceString_ShouldLogCommandException*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
references:
- uid: ASE_Assignment_Test.CommandsTests
  commentId: N:ASE_Assignment_Test.CommandsTests
  href: ASE_Assignment_Test.html
  name: ASE_Assignment_Test.CommandsTests
  nameWithType: ASE_Assignment_Test.CommandsTests
  fullName: ASE_Assignment_Test.CommandsTests
  spec.csharp:
  - uid: ASE_Assignment_Test
    name: ASE_Assignment_Test
    href: ASE_Assignment_Test.html
  - name: .
  - uid: ASE_Assignment_Test.CommandsTests
    name: CommandsTests
    href: ASE_Assignment_Test.CommandsTests.html
  spec.vb:
  - uid: ASE_Assignment_Test
    name: ASE_Assignment_Test
    href: ASE_Assignment_Test.html
  - name: .
  - uid: ASE_Assignment_Test.CommandsTests
    name: CommandsTests
    href: ASE_Assignment_Test.CommandsTests.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ASE_Assignment_Test.CommandsTests.CommandFillTests.TestInitialize*
  commentId: Overload:ASE_Assignment_Test.CommandsTests.CommandFillTests.TestInitialize
  href: ASE_Assignment_Test.CommandsTests.CommandFillTests.html#ASE_Assignment_Test_CommandsTests_CommandFillTests_TestInitialize
  name: TestInitialize
  nameWithType: CommandFillTests.TestInitialize
  fullName: ASE_Assignment_Test.CommandsTests.CommandFillTests.TestInitialize
- uid: ASE_Assignment_Test.CommandsTests.CommandFillTests.Fill_ParameterizedConstructor_WithNullText_ShouldThrowArgumentNullException*
  commentId: Overload:ASE_Assignment_Test.CommandsTests.CommandFillTests.Fill_ParameterizedConstructor_WithNullText_ShouldThrowArgumentNullException
  href: ASE_Assignment_Test.CommandsTests.CommandFillTests.html#ASE_Assignment_Test_CommandsTests_CommandFillTests_Fill_ParameterizedConstructor_WithNullText_ShouldThrowArgumentNullException
  name: Fill_ParameterizedConstructor_WithNullText_ShouldThrowArgumentNullException
  nameWithType: CommandFillTests.Fill_ParameterizedConstructor_WithNullText_ShouldThrowArgumentNullException
  fullName: ASE_Assignment_Test.CommandsTests.CommandFillTests.Fill_ParameterizedConstructor_WithNullText_ShouldThrowArgumentNullException
- uid: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithValidTrue_ShouldNotLogError*
  commentId: Overload:ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithValidTrue_ShouldNotLogError
  href: ASE_Assignment_Test.CommandsTests.CommandFillTests.html#ASE_Assignment_Test_CommandsTests_CommandFillTests_CheckParameters_WithValidTrue_ShouldNotLogError
  name: CheckParameters_WithValidTrue_ShouldNotLogError
  nameWithType: CommandFillTests.CheckParameters_WithValidTrue_ShouldNotLogError
  fullName: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithValidTrue_ShouldNotLogError
- uid: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithValidFalse_ShouldNotLogError*
  commentId: Overload:ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithValidFalse_ShouldNotLogError
  href: ASE_Assignment_Test.CommandsTests.CommandFillTests.html#ASE_Assignment_Test_CommandsTests_CommandFillTests_CheckParameters_WithValidFalse_ShouldNotLogError
  name: CheckParameters_WithValidFalse_ShouldNotLogError
  nameWithType: CommandFillTests.CheckParameters_WithValidFalse_ShouldNotLogError
  fullName: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithValidFalse_ShouldNotLogError
- uid: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithIncorrectNumberOfParameters_ShouldLogCommandException*
  commentId: Overload:ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithIncorrectNumberOfParameters_ShouldLogCommandException
  href: ASE_Assignment_Test.CommandsTests.CommandFillTests.html#ASE_Assignment_Test_CommandsTests_CommandFillTests_CheckParameters_WithIncorrectNumberOfParameters_ShouldLogCommandException
  name: CheckParameters_WithIncorrectNumberOfParameters_ShouldLogCommandException
  nameWithType: CommandFillTests.CheckParameters_WithIncorrectNumberOfParameters_ShouldLogCommandException
  fullName: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithIncorrectNumberOfParameters_ShouldLogCommandException
- uid: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithNullParameter_ShouldLogCommandException*
  commentId: Overload:ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithNullParameter_ShouldLogCommandException
  href: ASE_Assignment_Test.CommandsTests.CommandFillTests.html#ASE_Assignment_Test_CommandsTests_CommandFillTests_CheckParameters_WithNullParameter_ShouldLogCommandException
  name: CheckParameters_WithNullParameter_ShouldLogCommandException
  nameWithType: CommandFillTests.CheckParameters_WithNullParameter_ShouldLogCommandException
  fullName: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithNullParameter_ShouldLogCommandException
- uid: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithEmptyString_ShouldLogCommandException*
  commentId: Overload:ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithEmptyString_ShouldLogCommandException
  href: ASE_Assignment_Test.CommandsTests.CommandFillTests.html#ASE_Assignment_Test_CommandsTests_CommandFillTests_CheckParameters_WithEmptyString_ShouldLogCommandException
  name: CheckParameters_WithEmptyString_ShouldLogCommandException
  nameWithType: CommandFillTests.CheckParameters_WithEmptyString_ShouldLogCommandException
  fullName: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithEmptyString_ShouldLogCommandException
- uid: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithWhitespaceString_ShouldLogCommandException*
  commentId: Overload:ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithWhitespaceString_ShouldLogCommandException
  href: ASE_Assignment_Test.CommandsTests.CommandFillTests.html#ASE_Assignment_Test_CommandsTests_CommandFillTests_CheckParameters_WithWhitespaceString_ShouldLogCommandException
  name: CheckParameters_WithWhitespaceString_ShouldLogCommandException
  nameWithType: CommandFillTests.CheckParameters_WithWhitespaceString_ShouldLogCommandException
  fullName: ASE_Assignment_Test.CommandsTests.CommandFillTests.CheckParameters_WithWhitespaceString_ShouldLogCommandException
