### YamlMime:ManagedReference
items:
- uid: ASE_Assignment_Test.CommandsTests.CommandIfTests
  commentId: T:ASE_Assignment_Test.CommandsTests.CommandIfTests
  id: CommandIfTests
  parent: ASE_Assignment_Test.CommandsTests
  children:
  - ASE_Assignment_Test.CommandsTests.CommandIfTests.AppIf_CreateMultipleInstances_ShouldNotThrowExceptions
  - ASE_Assignment_Test.CommandsTests.CommandIfTests.TestInitialize
  langs:
  - csharp
  - vb
  name: CommandIfTests
  nameWithType: CommandIfTests
  fullName: ASE_Assignment_Test.CommandsTests.CommandIfTests
  type: Class
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment_Test/CommandsTests/CommandIfTests.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: CommandIfTests
    path: ASE_Assignment_Test/CommandsTests/CommandIfTests.cs
    startLine: 18
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test.CommandsTests
  summary: Unit test class for verifying the functionality of the CommandIf class.
  remarks: >-
    This class contains tests to validate the behavior and functionality of the CommandIf command, 

    which represents conditional logic ("if" statements) in the application's programming logic. 

    The tests ensure that instances of the CommandIf class can be created and executed without restrictions, 

    and that conditional operations behave as expected.
  example: []
  syntax:
    content: >-
      [TestClass]

      public class CommandIfTests
    content.vb: >-
      <TestClass>

      Public Class CommandIfTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandsTests.CommandIfTests.TestInitialize
  commentId: M:ASE_Assignment_Test.CommandsTests.CommandIfTests.TestInitialize
  id: TestInitialize
  parent: ASE_Assignment_Test.CommandsTests.CommandIfTests
  langs:
  - csharp
  - vb
  name: TestInitialize()
  nameWithType: CommandIfTests.TestInitialize()
  fullName: ASE_Assignment_Test.CommandsTests.CommandIfTests.TestInitialize()
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment_Test/CommandsTests/CommandIfTests.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: TestInitialize
    path: ASE_Assignment_Test/CommandsTests/CommandIfTests.cs
    startLine: 33
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test.CommandsTests
  summary: Initializes the test environment before each test method is executed.
  remarks: >-
    Ensures that a new instance of the CommandIf class is created for each test 

    to maintain test isolation and ensure consistent behavior across test cases.
  example: []
  syntax:
    content: >-
      [TestInitialize]

      public void TestInitialize()
    content.vb: >-
      <TestInitialize>

      Public Sub TestInitialize()
  overload: ASE_Assignment_Test.CommandsTests.CommandIfTests.TestInitialize*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute.#ctor
    arguments: []
- uid: ASE_Assignment_Test.CommandsTests.CommandIfTests.AppIf_CreateMultipleInstances_ShouldNotThrowExceptions
  commentId: M:ASE_Assignment_Test.CommandsTests.CommandIfTests.AppIf_CreateMultipleInstances_ShouldNotThrowExceptions
  id: AppIf_CreateMultipleInstances_ShouldNotThrowExceptions
  parent: ASE_Assignment_Test.CommandsTests.CommandIfTests
  langs:
  - csharp
  - vb
  name: AppIf_CreateMultipleInstances_ShouldNotThrowExceptions()
  nameWithType: CommandIfTests.AppIf_CreateMultipleInstances_ShouldNotThrowExceptions()
  fullName: ASE_Assignment_Test.CommandsTests.CommandIfTests.AppIf_CreateMultipleInstances_ShouldNotThrowExceptions()
  type: Method
  source:
    remote:
      path: ASE_Assignment/ASE_Assignment_Test/CommandsTests/CommandIfTests.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-bsameer12.git
    id: AppIf_CreateMultipleInstances_ShouldNotThrowExceptions
    path: ASE_Assignment_Test/CommandsTests/CommandIfTests.cs
    startLine: 43
  assemblies:
  - ASE_Assignment_Test
  namespace: ASE_Assignment_Test.CommandsTests
  summary: Tests that multiple instances of the <xref href="ASE_Assignment.Commands.CommandIf" data-throw-if-not-resolved="false"></xref> class can be created without restrictions.
  example: []
  syntax:
    content: >-
      [TestMethod]

      public void AppIf_CreateMultipleInstances_ShouldNotThrowExceptions()
    content.vb: >-
      <TestMethod>

      Public Sub AppIf_CreateMultipleInstances_ShouldNotThrowExceptions()
  overload: ASE_Assignment_Test.CommandsTests.CommandIfTests.AppIf_CreateMultipleInstances_ShouldNotThrowExceptions*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
references:
- uid: ASE_Assignment_Test.CommandsTests
  commentId: N:ASE_Assignment_Test.CommandsTests
  href: ASE_Assignment_Test.html
  name: ASE_Assignment_Test.CommandsTests
  nameWithType: ASE_Assignment_Test.CommandsTests
  fullName: ASE_Assignment_Test.CommandsTests
  spec.csharp:
  - uid: ASE_Assignment_Test
    name: ASE_Assignment_Test
    href: ASE_Assignment_Test.html
  - name: .
  - uid: ASE_Assignment_Test.CommandsTests
    name: CommandsTests
    href: ASE_Assignment_Test.CommandsTests.html
  spec.vb:
  - uid: ASE_Assignment_Test
    name: ASE_Assignment_Test
    href: ASE_Assignment_Test.html
  - name: .
  - uid: ASE_Assignment_Test.CommandsTests
    name: CommandsTests
    href: ASE_Assignment_Test.CommandsTests.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ASE_Assignment_Test.CommandsTests.CommandIfTests.TestInitialize*
  commentId: Overload:ASE_Assignment_Test.CommandsTests.CommandIfTests.TestInitialize
  href: ASE_Assignment_Test.CommandsTests.CommandIfTests.html#ASE_Assignment_Test_CommandsTests_CommandIfTests_TestInitialize
  name: TestInitialize
  nameWithType: CommandIfTests.TestInitialize
  fullName: ASE_Assignment_Test.CommandsTests.CommandIfTests.TestInitialize
- uid: ASE_Assignment.Commands.CommandIf
  commentId: T:ASE_Assignment.Commands.CommandIf
  href: ASE_Assignment.Commands.CommandIf.html
  name: CommandIf
  nameWithType: CommandIf
  fullName: ASE_Assignment.Commands.CommandIf
- uid: ASE_Assignment_Test.CommandsTests.CommandIfTests.AppIf_CreateMultipleInstances_ShouldNotThrowExceptions*
  commentId: Overload:ASE_Assignment_Test.CommandsTests.CommandIfTests.AppIf_CreateMultipleInstances_ShouldNotThrowExceptions
  href: ASE_Assignment_Test.CommandsTests.CommandIfTests.html#ASE_Assignment_Test_CommandsTests_CommandIfTests_AppIf_CreateMultipleInstances_ShouldNotThrowExceptions
  name: AppIf_CreateMultipleInstances_ShouldNotThrowExceptions
  nameWithType: CommandIfTests.AppIf_CreateMultipleInstances_ShouldNotThrowExceptions
  fullName: ASE_Assignment_Test.CommandsTests.CommandIfTests.AppIf_CreateMultipleInstances_ShouldNotThrowExceptions
